package com.example.myapplication1

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.padding
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.Color.Companion.Cyan
import androidx.compose.ui.graphics.Color.Companion.Blue
import androidx.compose.ui.graphics.Color.Companion.Magenta
import androidx.compose.ui.unit.sp
import androidx.compose.ui.text.font.FontStyle
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.buildAnnotatedString
import androidx.compose.ui.text.withStyle
import androidx.compose.runtime.Composable
import androidx.compose.ui.geometry.Offset
import androidx.compose.ui.graphics.Shadow
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.Column
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.TextStyle
import androidx.compose.ui.tooling.preview.Preview
import com.example.myapplication1.ui.theme.MyApplication1Theme
import androidx.compose.ui.*
import androidx.compose.foundation.layout.Box
import androidx.compose.ui.text.SpanStyle
import androidx.compose.ui.graphics.Brush
import com.example.myapplication1.ui.theme.Pink80
import com.example.myapplication1.ui.theme.Purple40
import androidx.compose.ui.graphics.Color.Companion.Black
import androidx.compose.ui.graphics.Color.Companion.White
import com.example.myapplication1.ui.theme.PurpleGrey40
import android.provider.CalendarContract.Colors
import androidx.compose.foundation.background
import androidx.compose.foundation.border
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.fillMaxHeight
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.ui.graphics.Color.Companion.Green
import androidx.compose.ui.graphics.Color.Companion.Red
import androidx.compose.ui.graphics.Color.Companion.Yellow
import androidx.compose.material3.Button
import androidx.compose.ui.layout.layout
import androidx.compose.ui.modifier.modifierLocalOf
import androidx.compose.ui.unit.dp
import androidx.compose.foundation.clickable


Order of Modifier:-
class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        //enableEdgeToEdge()
        setContent {
            MyApplication1Theme {
                Column(
                    modifier=Modifier.background(Color.Red).fillMaxHeight().padding(20.dp)
                ) {
                    Text("my Name")
                    Text("Monalisa",modifier=Modifier.background(Color.Cyan))
                    Text("hyyyyyyyyyyyyy")
                }
            }
        }
    }


Alignment Start:-
class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        //enableEdgeToEdge()
        setContent {
            MyApplication1Theme {
                Column(
                    modifier=Modifier.padding(10.dp).background(Color.Red)
                        .fillMaxHeight().fillMaxSize(),
                    horizontalAlignment = Alignment.Start
                ) {
                    Text("my Name")
                    Text("Monalisa",modifier=Modifier.background(Color.Cyan))
                    Text("hyyyyyyyyyyyyy")

                }
            }
        }
    }


Alignment End:-
class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        setContent {
            MyApplication1Theme {
                Column(
                    modifier=Modifier.padding(10.dp).background(Color.Red)
                        .fillMaxHeight().fillMaxSize(),
                    horizontalAlignment = Alignment.End      super.onCreate(savedInstanceState)
        //enableEdgeToEdge()

                ) {
                    Text("my Name")
                    Text("Monalisa",modifier=Modifier.background(Color.Cyan))
                    Text("hyyyyyyyyyyyyy")

                }
            }
        }
    }
}


Alignment center:-
class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        //enableEdgeToEdge()
        setContent {
            MyApplication1Theme {
                Column(
                    modifier=Modifier.padding(10.dp).background(Color.Red)
                        .fillMaxHeight().fillMaxSize(),
                    horizontalAlignment = Alignment.CenterHorizontally
                ) {
                    Text("my Name")
                    Text("Monalisa",modifier=Modifier.background(Color.Cyan))
                    Text("hyyyyyyyyyyyyy")

                }
            }
        }
    }
}
}


Arrangement top:-
class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        //enableEdgeToEdge()
        setContent {
            MyApplication1Theme {
                Column(
                    modifier=Modifier.padding(10.dp).background(Color.Red)
                        .fillMaxHeight().fillMaxSize(),
                    verticalArrangement = Arrangement.Top
                ) {
                    Text("my Name")
                    Text("Monalisa",modifier=Modifier.background(Color.Cyan))
                    Text("hyyyyyyyyyyyyy")

                }
            }
        }
    }
}



Bottom :-
class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        //enableEdgeToEdge()
        setContent {
            MyApplication1Theme {
                Column(
                    modifier=Modifier.padding(10.dp).background(Color.Red)
                        .fillMaxHeight().fillMaxSize(),
                    verticalArrangement = Arrangement.Bottom
                ) {
                    Text("my Name")
                    Text("Monalisa",modifier=Modifier.background(Color.Cyan))
                    Text("hyyyyyyyyyyyyy")

                }
            }
        }
    }
}


center:-
class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        //enableEdgeToEdge()
        setContent {
            MyApplication1Theme {
                Column(
                    modifier=Modifier.padding(10.dp).background(Color.Red)
                        .fillMaxHeight().fillMaxSize(),
                    verticalArrangement = Arrangement.Center
                ) {
                    Text("my Name")
                    Text("Monalisa",modifier=Modifier.background(Color.Cyan))
                    Text("hyyyyyyyyyyyyy")

                }
            }
        }
    }
}



space around:-
class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        //enableEdgeToEdge()
        setContent {
            MyApplication1Theme {
                Column(
                    modifier=Modifier.padding(10.dp).background(Color.Red)
                        .fillMaxHeight().fillMaxSize(),
                    verticalArrangement = Arrangement.SpaceAround
                ) {
                    Text("my Name")
                    Text("Monalisa",modifier=Modifier.background(Color.Cyan))
                    Text("hyyyyyyyyyyyyy")

                }
            }
        }
    }
}



SpaceEvenly:-
class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        //enableEdgeToEdge()
        setContent {
            MyApplication1Theme {
                Column(
                    modifier=Modifier.padding(10.dp).background(Color.Red)
                        .fillMaxHeight().fillMaxSize(),
                    verticalArrangement = Arrangement.SpaceEvenly
                ) {
                    Text("my Name")
                    Text("Monalisa",modifier=Modifier.background(Color.Cyan))
                    Text("hyyyyyyyyyyyyy")

                }
            }
        }
    }
}


space between:-
class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        //enableEdgeToEdge()
        setContent {
            MyApplication1Theme {
                Column(
                    modifier=Modifier.padding(10.dp).background(Color.Red)
                        .fillMaxHeight().fillMaxSize(),
                    verticalArrangement = Arrangement.SpaceBetween
                ) {
                    Text("my Name")
                    Text("Monalisa",modifier=Modifier.background(Color.Cyan))
                    Text("hyyyyyyyyyyyyy")

                }
            }
        }
    }
}



Arrangement with Alignment 1:-
class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        //enableEdgeToEdge()
        setContent {
            MyApplication1Theme {
                Column(
                    modifier=Modifier.padding(10.dp).background(Color.Red)
                        .fillMaxHeight().fillMaxSize(),
                    horizontalAlignment = AbsoluteAlignment.Right,
                    verticalArrangement = Arrangement.Center
                ) {
                    Text("my Name")
                    Text("Monalisa",modifier=Modifier.background(Color.Cyan))
                    Text("hyyyyyyyyyyyyy")

                }
            }
        }
    }
}



Arrangement with Alignment 2:-
class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        //enableEdgeToEdge()
        setContent {
            MyApplication1Theme {
                Column(
                    modifier=Modifier.padding(10.dp).background(Color.Red)
                        .fillMaxHeight().fillMaxSize(),
                    horizontalAlignment = Alignment.CenterHorizontally,
                    verticalArrangement = Arrangement.Center
                ) {
                    Text("my Name")
                    Text("Monalisa",modifier=Modifier.background(Color.Cyan))
                    Text("hyyyyyyyyyyyyy")

                }
            }
        }
    }
}



Arrangement with Alignment 3:-
class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        //enableEdgeToEdge()
        setContent {
            MyApplication1Theme {
                Column(
                    modifier=Modifier.padding(10.dp).background(Color.Red)
                        .fillMaxHeight().fillMaxSize(),
                    verticalArrangement = Arrangement.SpaceEvenly,
                    horizontalAlignment = Alignment.CenterHorizontally
                ) {
                    Text("my Name")
                    Text("Monalisa",modifier=Modifier.background(Color.Cyan))
                    Text("hyyyyyyyyyyyyy")

                }
            }
        }
    }
}
}
